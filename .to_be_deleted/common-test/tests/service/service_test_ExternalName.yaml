suite: service test ExternalName
templates:
  - common.yaml
chart:
  appVersion: &appVer v1.2.3
tests:
  - it: should pass with default values
    documentIndex: &deploymentDoc 0
    asserts:
      - hasDocuments:
          count: 3
      - isKind:
          of: Deployment

  - it: should pass with correct apiVersion
    documentIndex: &serviceDoc 1
    asserts:
      - isKind:
          of: Service
      - isAPIVersion:
          of: v1

  - it: should pass with ExternalName service type
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ExternalName
          externalName: some_hostname
    asserts:
      - equal:
          path: spec
          value:
            type: ExternalName
            externalName: some_hostname
            publishNotReadyAddresses: false
            ports: &defaultPort
              - name: main
                port: 65535
                protocol: TCP
                targetPort: main
      - isNull:
          path: spec.selector
      - isNull:
          path: spec.ipFamilies
      - isNull:
          path: spec.ipFamilyPolicy

  - it: should pass with ExternalName service type and externalTrafficPolicy
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ExternalName
          externalTrafficPolicy: Cluster
          externalName: some_hostname
    asserts:
      - equal:
          path: spec
          value:
            type: ExternalName
            externalName: some_hostname
            ports: *defaultPort
            publishNotReadyAddresses: false
            externalTrafficPolicy: Cluster
      - isNull:
          path: spec.selector
      - isNull:
          path: spec.ipFamilies
      - isNull:
          path: spec.ipFamilyPolicy

  - it: should pass with ExternalName service type and sessionAffinity set to None
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ExternalName
          externalName: some_hostname
          sessionAffinity: None
          sessionAffinityConfig:
            ClientIP:
              timeoutSeconds: 1000
    asserts:
      - equal:
          path: spec
          value:
            type: ExternalName
            externalName: some_hostname
            ports: *defaultPort
            publishNotReadyAddresses: false
            sessionAffinity: None
      - isNull:
          path: spec.sessionAffinityConfig
      - isNull:
          path: spec.selector
      - isNull:
          path: spec.ipFamilies
      - isNull:
          path: spec.ipFamilyPolicy

  - it: should pass with ExternalName service type and sessionAffinity set to ClientIP
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ExternalName
          externalName: some_hostname
          sessionAffinity: ClientIP
          sessionAffinityConfig:
            clientIP:
              timeoutSeconds: 1000
    asserts:
      - equal:
          path: spec
          value:
            type: ExternalName
            externalName: some_hostname
            ports: *defaultPort
            publishNotReadyAddresses: false
            sessionAffinity: ClientIP
            sessionAffinityConfig:
              clientIP:
                timeoutSeconds: 1000
      - isNull:
          path: spec.selector
      - isNull:
          path: spec.ipFamilies
      - isNull:
          path: spec.ipFamilyPolicy

  - it: should pass with ExternalName service type and sessionAffinity set to ClientIP from tpl
    documentIndex: *serviceDoc
    set:
      timeout: 1000
      service:
        main:
          type: ExternalName
          externalName: some_hostname
          sessionAffinity: ClientIP
          sessionAffinityConfig:
            clientIP:
              timeoutSeconds: 1000
    asserts:
      - equal:
          path: spec
          value:
            type: ExternalName
            externalName: some_hostname
            ports: *defaultPort
            publishNotReadyAddresses: false
            sessionAffinity: ClientIP
            sessionAffinityConfig:
              clientIP:
                timeoutSeconds: 1000
      - isNull:
          path: spec.selector
      - isNull:
          path: spec.ipFamilies
      - isNull:
          path: spec.ipFamilyPolicy

  - it: should pass with ExternalName service type and externalIPs
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ExternalName
          externalName: some_hostname
          externalIPs:
            - 192.168.1.20
            - 192.168.1.21
            - 192.168.1.22
    asserts:
      - equal:
          path: spec
          value:
            type: ExternalName
            externalName: some_hostname
            ports: *defaultPort
            publishNotReadyAddresses: false
            externalIPs:
              - 192.168.1.20
              - 192.168.1.21
              - 192.168.1.22
      - isNull:
          path: spec.selector
      - isNull:
          path: spec.ipFamilies
      - isNull:
          path: spec.ipFamilyPolicy

  - it: should pass with ExternalName service type and externalIPs from tpl
    documentIndex: *serviceDoc
    set:
      ip1: 192.168.1.20
      ip2: 192.168.1.21
      ip3: 192.168.1.22
      service:
        main:
          type: ExternalName
          externalName: some_hostname
          externalIPs:
            - "{{ .Values.ip1 }}"
            - "{{ .Values.ip2 }}"
            - "{{ .Values.ip3 }}"
    asserts:
      - equal:
          path: spec
          value:
            type: ExternalName
            externalName: some_hostname
            ports: *defaultPort
            publishNotReadyAddresses: false
            externalIPs:
              - 192.168.1.20
              - 192.168.1.21
              - 192.168.1.22
      - isNull:
          path: spec.selector
      - isNull:
          path: spec.ipFamilies
      - isNull:
          path: spec.ipFamilyPolicy

  - it: should pass with ExternalName service type and publishNotReadyAddresses
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ExternalName
          externalName: some_hostname
          publishNotReadyAddresses: true
    asserts:
      - equal:
          path: spec
          value:
            type: ExternalName
            externalName: some_hostname
            ports: *defaultPort
            publishNotReadyAddresses: true
      - isNull:
          path: spec.selector
      - isNull:
          path: spec.ipFamilies
      - isNull:
          path: spec.ipFamilyPolicy
