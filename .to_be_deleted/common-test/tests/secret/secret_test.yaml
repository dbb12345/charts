suite: secret test
templates:
  - common.yaml
chart:
  appVersion: &appVer v1.2.3
tests:
  - it: should pass with default values
    documentIndex: &deploymentDoc 0
    asserts:
      - hasDocuments:
          count: 3
      - isKind:
          of: Deployment

  - it: should fail without a dict in secret
    set:
      secret:
        enabled: true
        content:
          key: value
    asserts:
      - failedTemplate:
          errorMessage: <secret> key must have at least one dict. Found (bool)

  - it: should fail with uppercase in name in secret
    set:
      secret:
        someName:
          enabled: true
          content:
            key: value
    asserts:
      - failedTemplate:
          errorMessage: Secret has invalid name (someName). Name must be lowercase.

  - it: should fail with underscore in name in secret
    set:
      secret:
        some_name:
          enabled: true
          content:
            key: value
    asserts:
      - failedTemplate:
          errorMessage: Secret has invalid name (some_name). Name cannot contain underscores (_).

  - it: should fail with empty content in secret
    set:
      secret:
        somename:
          enabled: true
          content:
    asserts:
      - failedTemplate:
          errorMessage: Content of Secret (somename) are empty. Please disable or add content.

  - it: should fail with string in content in secret
    set:
      secret:
        somename:
          enabled: true
          content: something
    asserts:
      - failedTemplate:
          errorMessage: Content of Secret (somename) are string. Must be in key/value format. Value can be scalar too.

  - it: should pass with 1 secret created with parseAsEnv set
    documentIndex: &secretDoc 0
    set:
      secret:
        some-name:
          enabled: true
          parseAsEnv: true
          content:
            key1: 123
            key2: value2
    asserts:
      - hasDocuments:
          count: 4
      - isKind:
          of: Secret
      - equal:
          path: type
          value: Opaque
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name
      - equal:
          path: stringData
          value:
            key1: "123"
            key2: value2
      - isNull:
          path: metadata.annotations
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME

  - it: should pass with empty key in content in secret
    documentIndex: *secretDoc
    set:
      secret:
        somename:
          enabled: true
          content:
            key: ""
    asserts:
      - equal:
          path: stringData
          value:
            key: ""

  - it: should pass with 1 secret created with parseAsEnv and values set from tpl
    documentIndex: *secretDoc
    set:
      k1: 123
      k2: value2
      secret:
        some-name:
          enabled: true
          parseAsEnv: true
          content:
            key1: "{{ .Values.k1 }}"
            key2: "{{ .Values.k2 }}"
    asserts:
      - equal:
          path: stringData
          value:
            key1: "123"
            key2: value2

  - it: should pass with 1 secret created with nameOverride set
    documentIndex: *secretDoc
    set:
      k1: true
      k2: value2
      secret:
        some-name:
          enabled: true
          parseAsEnv: true
          nameOverride: some-new-name
          content:
            key1: "{{ .Values.k1 }}"
            key2: "{{ .Values.k2 }}"
    asserts:
      - equal:
          path: stringData
          value:
            key1: "true"
            key2: value2
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-new-name

  - it: should pass with multiple secret created with parseAsEnv set (1/2) and values from tpl
    documentIndex: *secretDoc
    set:
      k1: value1
      k2: value2
      k3: value3
      k4: value4
      secret:
        some-name:
          enabled: true
          parseAsEnv: true
          content:
            key1: "{{ .Values.k1 }}"
            key2: "{{ .Values.k2 }}"
        some-other-name:
          enabled: true
          parseAsEnv: true
          content:
            key3: "{{ .Values.k3 }}"
            key4: "{{ .Values.k4 }}"
    asserts:
      - hasDocuments:
          count: 5
      - isKind:
          of: Secret
      - isAPIVersion:
          of: v1
      - equal:
          path: type
          value: Opaque
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name
      - equal:
          path: stringData
          value:
            key1: value1
            key2: value2
      - isNull:
          path: metadata.annotations
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME

  - it: should pass with multiple secret created with parseAsEnv set (2/2) and values from tpl
    documentIndex: &otherSecretDoc 1
    set:
      secret:
        some-name:
          enabled: true
          parseAsEnv: true
          content:
            key1: value1
            key2: value2
        some-other-name:
          enabled: true
          parseAsEnv: true
          content:
            key3: value3
            key4: value4
    asserts:
      - hasDocuments:
          count: 5
      - isKind:
          of: Secret
      - equal:
          path: type
          value: Opaque
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-other-name
      - equal:
          path: stringData
          value:
            key3: value3
            key4: value4
      - isNull:
          path: metadata.annotations
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME

  - it: should pass with multiple secret created with scalar in contents and tpl (1/2)
    documentIndex: *secretDoc
    set:
      k1: value1
      k2: 80
      k3: pair
      k4: value2
      k5: 81
      k6: pair2
      secret:
        some-name:
          enabled: true
          content:
            nginx.conf1: |
              alias {{ .Values.k1 }}
              listen {{ .Values.k2 }}

              function {
                # some json
                "key": {
                 "key2": "value",
                 "key3": "value2"
                }
              }
            key: "{{ .Values.k3 }}"
        some-other-name:
          enabled: true
          content:
            key: "{{ .Values.k6 }}"
            nginx.conf2: |
              alias {{ .Values.k4 }}
              listen {{ .Values.k5 }}

              function {
                # some json
                "key": {
                 "key2": "value",
                 "key3": "value2"
                }
              }
    asserts:
      - equal:
          path: stringData
          value:
            key: pair
            nginx.conf1: |
              alias value1
              listen 80

              function {
                # some json
                "key": {
                 "key2": "value",
                 "key3": "value2"
                }
              }
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name

  - it: should pass with multiple secret created with scalar in contents and tpl (2/2)
    documentIndex: *otherSecretDoc
    set:
      k1: value1
      k2: 80
      k3: pair
      k4: value2
      k5: 81
      k6: pair2
      secret:
        some-name:
          enabled: true
          content:
            key: "{{ .Values.k3 }}"
            nginx.conf1: |
              alias {{ .Values.k1 }}
              listen {{ .Values.k2 }}

              function {
                # some json
                "key": {
                 "key2": "value",
                 "key3": "value2"
                }
              }
        some-other-name:
          enabled: true
          content:
            key: "{{ .Values.k6 }}"
            nginx.conf2: |
              alias {{ .Values.k4 }}
              listen {{ .Values.k5 }}

              function {
                # some json
                "key": {
                 "key2": "value",
                 "key3": "value2"
                }
              }
    asserts:
      - equal:
          path: stringData
          value:
            key: pair2
            nginx.conf2: |
              alias value2
              listen 81

              function {
                # some json
                "key": {
                 "key2": "value",
                 "key3": "value2"
                }
              }
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-other-name

  - it: should pass with multiple secret created and labels and global labels added from tpl (1/2)
    documentIndex: *secretDoc
    set:
      l1: lab1
      l2: lab2
      l5: lab5
      l6: lab6
      global:
        labels:
          gl1: glab1
          gl2: glab2
      secret:
        some-name:
          enabled: true
          labels:
            label1: "{{ .Values.l1 }}"
            label2: "{{ .Values.l2 }}"
            label3: lab3
            label4: lab4
          content:
            key1: value1
            key2: value2
        some-other-name:
          enabled: true
          labels:
            label5: "{{ .Values.l5 }}"
            label6: "{{ .Values.l6 }}"
            label7: lab7
            label8: lab8
          content:
            key1: value1
            key2: value2
    asserts:
      - hasDocuments:
          count: 5
      - isKind:
          of: Secret
      - equal:
          path: type
          value: Opaque
      - isNull:
          path: metadata.annotations
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME
            label1: lab1
            label2: lab2
            label3: lab3
            label4: lab4
            gl1: glab1
            gl2: glab2

  - it: should pass with multiple secret created and labels and global labels added from tpl (2/2)
    documentIndex: *otherSecretDoc
    set:
      l1: lab1
      l2: lab2
      l5: lab5
      l6: lab6
      global:
        labels:
          gl1: glab1
          gl2: glab2
      secret:
        some-name:
          enabled: true
          labels:
            label1: "{{ .Values.l1 }}"
            label2: "{{ .Values.l2 }}"
            label3: lab3
            label4: lab4
          content:
            key1: value1
            key2: value2
        some-other-name:
          enabled: true
          labels:
            label5: "{{ .Values.l5 }}"
            label6: "{{ .Values.l6 }}"
            label7: lab7
            label8: lab8
          content:
            key1: value1
            key2: value2
    asserts:
      - hasDocuments:
          count: 5
      - isKind:
          of: Secret
      - equal:
          path: type
          value: Opaque
      - isNull:
          path: metadata.annotations
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-other-name
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME
            label5: lab5
            label6: lab6
            label7: lab7
            label8: lab8
            gl1: glab1
            gl2: glab2

  - it: should pass with multiple secret created and annotations and global annotations added from tpl (1/2)
    documentIndex: *secretDoc
    set:
      a1: anno1
      a2: anno2
      a5: anno5
      a6: anno6
      global:
        annotations:
          ga1: ganno1
          ga2: ganno2
      secret:
        some-name:
          enabled: true
          annotations:
            annotation1: "{{ .Values.a1 }}"
            annotation2: "{{ .Values.a2 }}"
            annotation3: anno3
            annotation4: anno4
          content:
            key1: value1
            key2: value2
        some-other-name:
          enabled: true
          annotations:
            annotation5: "{{ .Values.a5 }}"
            annotation6: "{{ .Values.a6 }}"
            annotation7: anno7
            annotation8: anno8
          content:
            key1: value1
            key2: value2
    asserts:
      - hasDocuments:
          count: 5
      - isKind:
          of: Secret
      - equal:
          path: type
          value: Opaque
      - equal:
          path: metadata.annotations
          value:
            annotation1: anno1
            annotation2: anno2
            annotation3: anno3
            annotation4: anno4
            ga1: ganno1
            ga2: ganno2
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME

  - it: should pass with multiple secret created and annotations and global annotations added from tpl (2/2)
    documentIndex: *otherSecretDoc
    set:
      a1: anno1
      a2: anno2
      a5: anno5
      a6: anno6
      global:
        annotations:
          ga1: ganno1
          ga2: ganno2
      secret:
        some-name:
          enabled: true
          annotations:
            annotation1: "{{ .Values.a1 }}"
            annotation2: "{{ .Values.a2 }}"
            annotation3: anno3
            annotation4: anno4
          content:
            key1: value1
            key2: value2
        some-other-name:
          enabled: true
          annotations:
            annotation5: "{{ .Values.a5 }}"
            annotation6: "{{ .Values.a6 }}"
            annotation7: anno7
            annotation8: anno8
          content:
            key1: value1
            key2: value2
    asserts:
      - hasDocuments:
          count: 5
      - isKind:
          of: Secret
      - equal:
          path: type
          value: Opaque
      - equal:
          path: metadata.annotations
          value:
            annotation5: anno5
            annotation6: anno6
            annotation7: anno7
            annotation8: anno8
            ga1: ganno1
            ga2: ganno2
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-other-name
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME

  - it: should pass with 1 secret created with custom type set
    documentIndex: &secretDoc 0
    set:
      secret:
        some-name:
          enabled: true
          secretType: myCustomType
          content:
            key1: false
            key2: value2
    asserts:
      - hasDocuments:
          count: 4
      - isKind:
          of: Secret
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-some-name
      - equal:
          path: type
          value: myCustomType
      - equal:
          path: stringData
          value:
            key1: "false"
            key2: value2
      - isNull:
          path: metadata.annotations
      - equal:
          path: metadata.labels
          value:
            app: common-test
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            release: RELEASE-NAME
