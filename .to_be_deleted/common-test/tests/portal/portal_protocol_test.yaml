suite: portal protocol test
templates:
  - common.yaml
tests:
  - it: should pass with default values
    documentIndex: &deploymentDoc 0
    asserts:
      - hasDocuments:
          count: 3
      - isKind:
          of: Deployment

  - it: should fail with portal override with invalid protocol
    set:
      portal:
        main:
          main:
            protocol: tcp
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              port: 10000
              targetPort: 80
    asserts:
      - failedTemplate:
          errorMessage: Invalid protocol (tcp). Only HTTP/HTTPS protocols are allowed for <portal>

  - it: should pass with http protocol on single service/port
    documentIndex: &portalDoc 2
    set:
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              port: 10000
              protocol: HTTP
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            protocol-main-main: http

  - it: should pass with https protocol on single service/port
    documentIndex: *portalDoc
    set:
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            protocol-main-main: https

  - it: should pass with no protocol on single service/port
    documentIndex: *portalDoc
    set:
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              port: 10000
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            protocol-main-main: http

  - it: should pass with http protocol on multiple service/port
    documentIndex: &dualServicePortalDoc 3
    set:
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTP
              targetPort: 80
            main2:
              enabled: true
              port: 10000
              protocol: HTTP
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTP
              targetPort: 80
            other2:
              enabled: true
              port: 10000
              protocol: HTTP
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            protocol-main-main: http
            protocol-main-main2: http
            protocol-other-other: http
            protocol-other-other2: http

  - it: should pass with https protocol on multiple service/port
    documentIndex: &dualServicePortalDoc 3
    set:
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
            main2:
              enabled: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
            other2:
              enabled: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            protocol-main-main: https
            protocol-main-main2: https
            protocol-other-other: https
            protocol-other-other2: https

  - it: should pass with no protocol on multiple service/port
    documentIndex: &dualServicePortalDoc 3
    set:
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              targetPort: 80
            main2:
              enabled: true
              port: 10000
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10000
              targetPort: 80
            other2:
              enabled: true
              port: 10000
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            protocol-main-main: http
            protocol-main-main2: http
            protocol-other-other: http
            protocol-other-other2: http

  - it: should pass with https protocol on multiple service/port and override on single
    documentIndex: &dualServicePortalDoc 3
    set:
      portal:
        other:
          other:
            protocol: http
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
            main2:
              enabled: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
            other2:
              enabled: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            protocol-main-main: https
            protocol-main-main2: https
            protocol-other-other: http
            protocol-other-other2: https

  - it: should pass with https protocol on multiple service/port and override on single (caps)
    documentIndex: *dualServicePortalDoc
    set:
      portal:
        other:
          other:
            protocol: HTTP
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
            main2:
              enabled: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
            other2:
              enabled: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            protocol-main-main: https
            protocol-main-main2: https
            protocol-other-other: http
            protocol-other-other2: https

  - it: should pass with https protocol on multiple service/port and override on multiple
    documentIndex: *dualServicePortalDoc
    set:
      portal:
        main:
          main:
            protocol: http
          main2:
            protocol: http
        other:
          other:
            protocol: http
          other2:
            protocol: http
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
            main2:
              enabled: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
            other2:
              enabled: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            protocol-main-main: http
            protocol-main-main2: http
            protocol-other-other: http
            protocol-other-other2: http

  - it: should pass with https protocol on multiple service/port and override on multiple from tpl
    documentIndex: *dualServicePortalDoc
    set:
      protocol1: http
      protocol2: http
      protocol3: http
      protocol4: http
      portal:
        main:
          main:
            protocol: "{{ .Values.protocol1 }}"
          main2:
            protocol: "{{ .Values.protocol2 }}"
        other:
          other:
            protocol: "{{ .Values.protocol3 }}"
          other2:
            protocol: "{{ .Values.protocol4 }}"
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
            main2:
              enabled: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
            other2:
              enabled: true
              port: 10000
              protocol: HTTPS
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            protocol-main-main: http
            protocol-main-main2: http
            protocol-other-other: http
            protocol-other-other2: http
