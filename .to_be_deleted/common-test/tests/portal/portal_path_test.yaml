suite: portal path test
templates:
  - common.yaml
tests:
  - it: should pass with default values
    documentIndex: &deploymentDoc 0
    asserts:
      - hasDocuments:
          count: 3
      - isKind:
          of: Deployment

  - it: should fail with portal override with empty path
    set:
      portal:
        main:
          main:
            path:
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              port: 10000
              targetPort: 80
    asserts:
      - failedTemplate:
          errorMessage: You have defined empty <path> in <portal>. Define a path or remove the key.

  - it: should fail with portal override with path not starting with /
    set:
      portal:
        main:
          main:
            path: a/relative/path
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              port: 10000
              targetPort: 80
    asserts:
      - failedTemplate:
          errorMessage: Portal path (a/relative/path) must start with a forward slash -> / <-

  - it: should pass with defaults on single service/port
    documentIndex: &portalDoc 2
    set:
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              port: 10000
              protocol: HTTP
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            path-main-main: /

  - it: should pass with path override on single service/port
    documentIndex: *portalDoc
    set:
      portal:
        main:
          main:
            path: /some_path
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              port: 10000
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            path-main-main: /some_path

  - it: should pass with defaults on multiple service/port
    documentIndex: &dualServicePortalDoc 3
    set:
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTP
              targetPort: 80
            main2:
              enabled: true
              port: 10001
              protocol: HTTP
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10002
              protocol: HTTP
              targetPort: 80
            other2:
              enabled: true
              port: 10003
              protocol: HTTP
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            path-main-main: /
            path-main-main2: /
            path-other-other: /
            path-other-other2: /

  - it: should pass with path override on multiple service/port
    documentIndex: *dualServicePortalDoc
    set:
      portal:
        main:
          main:
            path: /some_path1
          main2:
            path: /some_path2
        other:
          other:
            path: /some_path3
          other2:
            path: /some_path4
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTP
              targetPort: 80
            main2:
              enabled: true
              port: 10001
              protocol: HTTP
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10002
              protocol: HTTP
              targetPort: 80
            other2:
              enabled: true
              port: 10003
              protocol: HTTP
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            path-main-main: /some_path1
            path-main-main2: /some_path2
            path-other-other: /some_path3
            path-other-other2: /some_path4

  - it: should pass with path override on multiple service/port from tpl
    documentIndex: *dualServicePortalDoc
    set:
      path1: /some_path1
      path2: /some_path2
      path3: /some_path3
      path4: /some_path4
      portal:
        main:
          main:
            path: "{{ .Values.path1 }}"
          main2:
            path: "{{ .Values.path2 }}"
        other:
          other:
            path: "{{ .Values.path3 }}"
          other2:
            path: "{{ .Values.path4 }}"
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTP
              targetPort: 80
            main2:
              enabled: true
              port: 10001
              protocol: HTTP
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10002
              protocol: HTTP
              targetPort: 80
            other2:
              enabled: true
              port: 10003
              protocol: HTTP
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            path-main-main: /some_path1
            path-main-main2: /some_path2
            path-other-other: /some_path3
            path-other-other2: /some_path4
