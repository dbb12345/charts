suite: portal host test
templates:
  - common.yaml
tests:
  - it: should pass with default values
    documentIndex: &deploymentDoc 0
    asserts:
      - hasDocuments:
          count: 3
      - isKind:
          of: Deployment

  - it: should fail with portal override with empty host
    set:
      portal:
        main:
          main:
            host:
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              port: 10000
              targetPort: 80
    asserts:
      - failedTemplate:
          errorMessage: You have defined empty <host> in <portal>. Define a host or remove the key.

  - it: should pass with defaults on single service/port
    documentIndex: &portalDoc 2
    set:
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              port: 10000
              protocol: HTTP
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            host-main-main: $node_ip

  - it: should pass with LoadBalancer and IP set on single service/port
    documentIndex: &portalDoc 2
    set:
      service:
        main:
          enabled: true
          type: LoadBalancer
          loadBalancerIP: 10.10.10.100
          ports:
            main:
              enabled: true
              port: 10000
              protocol: HTTP
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            host-main-main: "10.10.10.100"

  - it: should pass with host override on single service/port
    documentIndex: *portalDoc
    set:
      portal:
        main:
          main:
            host: 10.10.10.100
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              port: 10000
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            host-main-main: "10.10.10.100"

  - it: should pass with defaults on multiple service/port
    documentIndex: &dualServicePortalDoc 3
    set:
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTP
              targetPort: 80
            main2:
              enabled: true
              port: 10001
              protocol: HTTP
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10002
              protocol: HTTP
              targetPort: 80
            other2:
              enabled: true
              port: 10003
              protocol: HTTP
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            host-main-main: $node_ip
            host-main-main2: $node_ip
            host-other-other: $node_ip
            host-other-other2: $node_ip

  - it: should pass with host override on multiple service/port
    documentIndex: *dualServicePortalDoc
    set:
      portal:
        main:
          main:
            host: 10.10.10.100
          main2:
            host: 10.10.10.101
        other:
          other:
            host: 10.10.10.102
          other2:
            host: 10.10.10.103
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTP
              targetPort: 80
            main2:
              enabled: true
              port: 10001
              protocol: HTTP
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10002
              protocol: HTTP
              targetPort: 80
            other2:
              enabled: true
              port: 10003
              protocol: HTTP
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            host-main-main: "10.10.10.100"
            host-main-main2: "10.10.10.101"
            host-other-other: "10.10.10.102"
            host-other-other2: "10.10.10.103"

  - it: should pass with override on multiple service/port from tpl
    documentIndex: *dualServicePortalDoc
    set:
      host1: 10.10.10.100
      host2: 10.10.10.101
      host3: 10.10.10.102
      host4: 10.10.10.103
      portal:
        main:
          main:
            host: "{{ .Values.host1 }}"
          main2:
            host: "{{ .Values.host2 }}"
        other:
          other:
            host: "{{ .Values.host3 }}"
          other2:
            host: "{{ .Values.host4 }}"
      service:
        main:
          enabled: true
          ports:
            main:
              enabled: true
              primary: true
              port: 10000
              protocol: HTTP
              targetPort: 80
            main2:
              enabled: true
              port: 10001
              protocol: HTTP
              targetPort: 80
        other:
          enabled: true
          ports:
            other:
              enabled: true
              primary: true
              port: 10002
              protocol: HTTP
              targetPort: 80
            other2:
              enabled: true
              port: 10003
              protocol: HTTP
              targetPort: 80
    asserts:
      - isKind:
          of: ConfigMap
      - isAPIVersion:
          of: v1
      - equal:
          path: metadata.name
          value: portal
      - isSubset:
          path: data
          content:
            host-main-main: "10.10.10.100"
            host-main-main2: "10.10.10.101"
            host-other-other: "10.10.10.102"
            host-other-other2: "10.10.10.103"
