
suite: service test clusterIP
templates:
  - common.yaml
chart:
  appVersion: &appVer v1.2.3
tests:
  - it: should pass with default values
    documentIndex: &deploymentDoc 0
    asserts:
      - hasDocuments:
          count: 3
      - isKind:
          of: Deployment

  - it: should pass with correct apiVersion
    documentIndex: &serviceDoc 1
    asserts:
      - isKind:
          of: Service
      - isAPIVersion:
          of: v1

  - it: should pass with ClusterIP service type
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ClusterIP
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports: &defaultPort
              - name: main
                port: 65535
                protocol: TCP
                targetPort: main
            publishNotReadyAddresses: false
            selector: &defaultSelector
              app: common-test
              app.kubernetes.io/instance: RELEASE-NAME
              app.kubernetes.io/name: common-test
              release: RELEASE-NAME

  - it: should pass with ClusterIP service type and clusterIP set
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ClusterIP
          clusterIP: 172.16.0.12
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            clusterIP: 172.16.0.12
            publishNotReadyAddresses: false
            ports: *defaultPort
            selector: *defaultSelector

  - it: should pass with ClusterIP service type and externalTrafficPolicy
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ClusterIP
          externalTrafficPolicy: Cluster
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports: *defaultPort
            publishNotReadyAddresses: false
            selector: *defaultSelector
      - isNull:
          path: spec.externalTrafficPolicy

  - it: should pass with ClusterIP service type and sessionAffinity set to None
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ClusterIP
          sessionAffinity: None
          sessionAffinityConfig:
            ClientIP:
              timeoutSeconds: 1000
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports: *defaultPort
            publishNotReadyAddresses: false
            selector: *defaultSelector
            sessionAffinity: None
      - isNull:
          path: spec.sessionAffinityConfig

  - it: should pass with ClusterIP service type and sessionAffinity set to ClientIP
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ClusterIP
          sessionAffinity: ClientIP
          sessionAffinityConfig:
            clientIP:
              timeoutSeconds: 1000
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports: *defaultPort
            publishNotReadyAddresses: false
            selector: *defaultSelector
            sessionAffinity: ClientIP
            sessionAffinityConfig:
              clientIP:
                timeoutSeconds: 1000

  - it: should pass with ClusterIP service type and sessionAffinity set to ClientIP from tpl
    documentIndex: *serviceDoc
    set:
      timeout: 1000
      service:
        main:
          type: ClusterIP
          sessionAffinity: ClientIP
          sessionAffinityConfig:
            clientIP:
              timeoutSeconds: 1000
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports: *defaultPort
            publishNotReadyAddresses: false
            selector: *defaultSelector
            sessionAffinity: ClientIP
            sessionAffinityConfig:
              clientIP:
                timeoutSeconds: 1000

  - it: should pass with ClusterIP service type and externalIPs
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ClusterIP
          externalIPs:
            - 192.168.1.20
            - 192.168.1.21
            - 192.168.1.22
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports: *defaultPort
            publishNotReadyAddresses: false
            selector: *defaultSelector
            externalIPs:
              - 192.168.1.20
              - 192.168.1.21
              - 192.168.1.22

  - it: should pass with ClusterIP service type and externalIPs from tpl
    documentIndex: *serviceDoc
    set:
      ip1: 192.168.1.20
      ip2: 192.168.1.21
      ip3: 192.168.1.22
      service:
        main:
          type: ClusterIP
          externalIPs:
            - "{{ .Values.ip1 }}"
            - "{{ .Values.ip2 }}"
            - "{{ .Values.ip3 }}"
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports: *defaultPort
            publishNotReadyAddresses: false
            selector: *defaultSelector
            externalIPs:
              - 192.168.1.20
              - 192.168.1.21
              - 192.168.1.22

  - it: should pass with ClusterIP service type and publishNotReadyAddresses
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ClusterIP
          publishNotReadyAddresses: true
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports: *defaultPort
            selector: *defaultSelector
            publishNotReadyAddresses: true

  - it: should pass with ClusterIP service type and ipFamilyPolicy
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ClusterIP
          ipFamilyPolicy: SingleStack
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports: *defaultPort
            publishNotReadyAddresses: false
            selector: *defaultSelector
            ipFamilyPolicy: SingleStack

  - it: should pass with ClusterIP service type and ipFamilies
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ClusterIP
          ipFamilies:
            - IPv6
            - IPv4
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports: *defaultPort
            publishNotReadyAddresses: false
            selector: *defaultSelector
            ipFamilies:
              - IPv6
              - IPv4

  - it: should pass with ClusterIP service type and custom selector
    documentIndex: *serviceDoc
    set:
      service:
        main:
          type: ClusterIP
          selector:
            some_key: some_value
            some_key1: some_value1
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports: *defaultPort
            publishNotReadyAddresses: false
            selector:
              some_key: some_value
              some_key1: some_value1

  - it: should pass with ClusterIP service type and custom selector from tpl
    documentIndex: *serviceDoc
    set:
      k1: some_value
      k2: some_value1
      service:
        main:
          type: ClusterIP
          selector:
            some_key: "{{ .Values.k1 }}"
            some_key1: "{{ .Values.k2 }}"
    asserts:
      - equal:
          path: spec
          value:
            type: ClusterIP
            ports: *defaultPort
            publishNotReadyAddresses: false
            selector:
              some_key: some_value
              some_key1: some_value1
