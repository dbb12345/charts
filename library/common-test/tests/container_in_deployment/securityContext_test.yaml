suite: container in deployment securityContext test
templates:
  - common.yaml
tests:
  - it: should pass with default values
    documentIndex: &deploymentDoc 0
    asserts:
      - hasDocuments:
          count: 3
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            capabilities:
              add: []
              drop:
                - ALL

  - it: should pass with securityContext changed
    documentIndex: *deploymentDoc
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  runAsNonRoot: false
                  runAsUser: 0
                  runAsGroup: 0
                  readOnlyRootFilesystem: false
                  allowPrivilegeEscalation: true
                  privileged: true
                  capabilities:
                    add:
                      - SYS_MODULE
                    drop:
                      - NET_ADMIN
    asserts:
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
            capabilities:
              add:
                - SYS_MODULE
              drop:
                - NET_ADMIN

  - it: should pass with securityContext changed from tpl
    documentIndex: *deploymentDoc
    set:
      source:
        addCap: SYS_MODULE
        remCap: NET_ADMIN
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  capabilities:
                    add:
                      - "{{ .Values.source.addCap }}"
                    drop:
                      - "{{ .Values.source.remCap }}"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - SYS_MODULE
              drop:
                - NET_ADMIN
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568

  - it: should fail with inherit key added in securityContext on main container
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  inherit: true
    asserts:
      - failedTemplate:
          errorMessage: <securityContext.inherit> key is only available for additional/init/install/upgrade containers.

  - it: should fail with securityContext changed, runAsNonRoot true and runAsUser 0
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  runAsNonRoot: true
                  runAsUser: 0
    asserts:
      - failedTemplate:
          errorMessage: You are trying to run as root (user or group), but runAsNonRoot is set to true

  - it: should fail with securityContext changed, runAsNonRoot true and runAsGroup 0
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  runAsNonRoot: true
                  runAsUser: 0
    asserts:
      - failedTemplate:
          errorMessage: You are trying to run as root (user or group), but runAsNonRoot is set to true

  - it: should fail with securityContext changed and runAsNonRoot set to a non-bool value
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  runAsNonRoot: non-bool
    asserts:
      - failedTemplate:
          errorMessage: <runAsNonRoot> key has value (non-bool). But it must be boolean.

  - it: should fail with securityContext changed and privileged set to a non-bool value
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  privileged: non-bool
    asserts:
      - failedTemplate:
          errorMessage: <privileged> key has value (non-bool). But it must be boolean.

  - it: should fail with securityContext changed and readOnlyRootFilesystem set to a non-bool value
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  readOnlyRootFilesystem: non-bool
    asserts:
      - failedTemplate:
          errorMessage: <readOnlyRootFilesystem> key has value (non-bool). But it must be boolean.

  - it: should fail with securityContext changed and allowPrivilegeEscalation set to a non-bool value
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  allowPrivilegeEscalation: non-bool
    asserts:
      - failedTemplate:
          errorMessage: <allowPrivilegeEscalation> key has value (non-bool). But it must be boolean.

  - it: should fail with securityContext changed and capabilities.add is not a list
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  capabilities:
                    add: non-a-list
    asserts:
      - failedTemplate:
          errorMessage: <capabilities.add> key has value (non-a-list). But it must be a list. Set a list value or remove the key for the default ([]) to take effect.

  - it: should fail with securityContext changed and capabilities.drop is not a list
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  capabilities:
                    drop: non-a-list
    asserts:
      - failedTemplate:
          errorMessage: <capabilities.drop> key has value (non-a-list). But it must be a list. Set a list value or remove the key for the default ([ALL]) to take effect.

  - it: should fail with empty capabilities.drop in securityContext
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  capabilities:
                    drop:
    asserts:
      - failedTemplate:
          errorMessage:  <capabilities.drop> key has value (<nil>). But it must be a list. Set a list value or remove the key for the default ([ALL]) to take effect.

  - it: should fail with empty capabilities.add in securityContext
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  capabilities:
                    add:
    asserts:
      - failedTemplate:
          errorMessage: <capabilities.add> key has value (<nil>). But it must be a list. Set a list value or remove the key for the default ([]) to take effect.

  - it: should fail with empty runAsGroup in securityContext
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  runAsGroup:
    asserts:
      - failedTemplate:
          errorMessage: <runAsGroup> key cannot be empty. Set a value or remove the key for the default (568) to take effect.

  - it: should fail with non int runAsGroup in securityContext
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  runAsGroup: "1000"
    asserts:
      - failedTemplate:
         errorMessage: <runAsGroup> key has value of ("1000"). But must be an int.

  - it: should fail with non int runAsUser in securityContext
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  runAsUser: "1000"
    asserts:
      - failedTemplate:
         errorMessage: <runAsUser> key has value of ("1000"). But must be an int.

  - it: should fail with empty runAsUser in securityContext
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  runAsUser:
    asserts:
      - failedTemplate:
          errorMessage: <runAsUser> key cannot be empty. Set a value or remove the key for the default (568) to take effect.

  - it: should fail with empty privileged in securityContext
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  privileged:
    asserts:
      - failedTemplate:
          errorMessage: <privileged> key has value (<nil>). But it must be boolean.

  - it: should fail with empty allowPrivilegeEscalation in securityContext
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  allowPrivilegeEscalation:
    asserts:
      - failedTemplate:
          errorMessage: <allowPrivilegeEscalation> key has value (<nil>). But it must be boolean.

  - it: should fail with empty readOnlyRootFilesystem in securityContext
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  readOnlyRootFilesystem:
    asserts:
      - failedTemplate:
          errorMessage: <readOnlyRootFilesystem> key has value (<nil>). But it must be boolean.

  - it: should fail with empty runAsNonRoot in securityContext
    set:
      controllers:
        main:
          pod:
            containers:
              main:
                securityContext:
                  runAsNonRoot:
    asserts:
      - failedTemplate:
          errorMessage: <runAsNonRoot> key has value (<nil>). But it must be boolean.

  - it: should pass with deviceList defined
    documentIndex: *deploymentDoc
    set:
      deviceList:
        - enabled: true
          hostPath: /dev/usb
          mountPath: /host/dev/usb
    asserts:
      - equal:
          path: spec.template.spec.securityContext
          value:
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 5
              - 10
              - 20
              - 24
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            capabilities:
              add: []
              drop:
                - ALL

  - it: should pass with scaleGPU defined
    documentIndex: *deploymentDoc
    set:
      scaleGPU:
        nvidia: something
    asserts:
      - equal:
          path: spec.template.spec.securityContext
          value:
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 44
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            capabilities:
              add: []
              drop:
                - ALL

  - it: should pass with both scaleGPU and deviceList defined
    documentIndex: *deploymentDoc
    set:
      deviceList:
        - enabled: true
          hostPath: /dev/usb
          mountPath: /host/dev/usb
      scaleGPU:
        nvidia: something
    asserts:
      - equal:
          path: spec.template.spec.securityContext
          value:
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 5
              - 10
              - 20
              - 24
              - 44
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            capabilities:
              add: []
              drop:
                - ALL

  - it: should pass with container port <=1024 defined
    documentIndex: *deploymentDoc
    set:
      service:
        main:
          ports:
            main:
              port: 5000
              targetPort: 1024
    asserts:
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL

  - it: should pass with container port <=1024 defined
    documentIndex: *deploymentDoc
    set:
      service:
        main:
          ports:
            main:
              port: 5000
              targetPort: 80
    asserts:
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
