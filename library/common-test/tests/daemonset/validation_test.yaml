suite: daemonset validation test
templates:
  - common.yaml
tests:
  - it: should fail with invalid strategy
    set:
      workload:
        workload-name:
          enabled: true
          primary: true
          type: DaemonSet
          strategy: not-a-strategy
          podSpec: {}
    asserts:
      - failedTemplate:
          errorMessage: DaemonSet - Expected <strategy> to be one of [OnDelete, RollingUpdate], but got [not-a-strategy]

  - it: should fail with rollingUpdate not a dict
    set:
      workload:
        workload-name:
          enabled: true
          primary: true
          type: DaemonSet
          strategy: RollingUpdate
          rollingUpdate: "not a dict"
          podSpec: {}
    asserts:
      - failedTemplate:
          errorMessage: DaemonSet - Expected <rollingUpdate> to be a dictionary, but got [string]

  - it: should fail with both maxSurge and maxUnavailable set to 0
    set:
      fallbackDefaults:
        maxSurge: 0
        maxUnavailable: 0
      workload:
        workload-name:
          enabled: true
          primary: true
          type: DaemonSet
          strategy: RollingUpdate
          rollingUpdate:
            maxSurge: 0
            maxUnavailable: 0
          podSpec: {}
    asserts:
      - failedTemplate:
          errorMessage: DaemonSet - Cannot have <maxSurge> and <maxUnavailable> both set to 0
