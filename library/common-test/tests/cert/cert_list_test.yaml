suite: certificate list test
templates:
  - common.yaml
tests:
  - it: should fail with empty ixCertificates key
    set:
      scaleCertsList:
        - name: certname
          id: 1
      # Simulating middleware injection
      ixCertificates: {}
    asserts:
      - failedTemplate:
          errorMessage: Key <ixCertificates> is empty

  - it: should fail with cert that don't exist
    set:
      scaleCertsList:
        - name: certname
          id: 1
      # Simulating middleware injection
      ixCertificates:
        "2":
          certificate: cert_content
    asserts:
      - failedTemplate:
          errorMessage: Certificate (1) was not found.

  - it: should fail with expired cert
    set:
      scaleCertsList:
        - name: certname
          id: 1
      # Simulating middleware injection
      ixCertificates:
        "1":
          certificate: cert_content
          expired: true
    asserts:
      - failedTemplate:
          errorMessage: Certificate (1) is expired

  - it: should fail with revoked cert
    set:
      scaleCertsList:
        - name: certname
          id: 1
      # Simulating middleware injection
      ixCertificates:
        "1":
          certificate: cert_content
          revoked: true
    asserts:
      - failedTemplate:
          errorMessage: Certificate (1) has been revoked

  - it: should pass with 1 secret created with dash in the name
    documentIndex: &secretDoc 0
    set:
      scaleCertsList:
        - name: cert-name
          id: 1
      # Simulating middleware injection
      ixCertificates:
        "1":
          certificate: cert_content
          privatekey: some_key
    asserts:
      - isKind:
          of: Secret
      - isAPIVersion:
          of: v1
      - equal:
          path: type
          value: kubernetes.io/tls
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-cert-name-ixcert-1-0
      - isNotEmpty:
          path: data.tls\.crt
      - isNotEmpty:
          path: data.tls\.key

  - it: should pass with 1 secret created
    documentIndex: *secretDoc
    set:
      scaleCertsList:
        - name: certname
          id: 1
      # Simulating middleware injection
      ixCertificates:
        "1":
          certificate: cert_content
          privatekey: some_key
    asserts: &basicAssertion
      - isKind:
          of: Secret
      - isAPIVersion:
          of: v1
      - equal:
          path: type
          value: kubernetes.io/tls
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-certname-ixcert-1-0
      - isNotEmpty:
          path: data.tls\.crt
      - isNotEmpty:
          path: data.tls\.key

  - it: should pass with 1 secret created and revision increased
    documentIndex: *secretDoc
    release:
      revision: 1
    set:
      scaleCertsList:
        - name: certname
          id: 1
      # Simulating middleware injection
      ixCertificates:
        "1":
          certificate: cert_content
          privatekey: some_key
    asserts:
      - isKind:
          of: Secret
      - isAPIVersion:
          of: v1
      - equal:
          path: type
          value: kubernetes.io/tls
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-certname-ixcert-1-1
      - isNotEmpty:
          path: data.tls\.crt
      - isNotEmpty:
          path: data.tls\.key

  - it: should pass with 1 secret created and revision increased and name overriden
    documentIndex: *secretDoc
    release:
      revision: 1
    set:
      scaleCertsList:
        - name: certname
          id: 1
          nameOverride: name-override
      # Simulating middleware injection
      ixCertificates:
        "1":
          certificate: cert_content
          privatekey: some_key
    asserts:
      - isKind:
          of: Secret
      - isAPIVersion:
          of: v1
      - equal:
          path: type
          value: kubernetes.io/tls
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-name-override-ixcert-1-1
      - isNotEmpty:
          path: data.tls\.crt
      - isNotEmpty:
          path: data.tls\.key

  - it: should pass with 1 EXPIRED secret created and global allow
    documentIndex: *secretDoc
    set:
      global:
        defaults:
          useExpiredCerts: true
      scaleCertsList:
        - name: certname
          id: 1
      # Simulating middleware injection
      ixCertificates:
        "1":
          certificate: cert_content
          privatekey: some_key
          expired: true
    asserts: *basicAssertion

  - it: should pass with 2 secret created (doc1)
    documentIndex: *secretDoc
    set:
      scaleCertsList:
        - name: certname
          id: 1
        - name: certname2
          id: 2
      # Simulating middleware injection
      ixCertificates:
        "1":
          privatekey: some_key
          certificate: cert_content
        "2":
          privatekey: some_key2
          certificate: cert_content2
    asserts: *basicAssertion

  - it: should pass with 2 secret created (doc2)
    documentIndex: &secretDoc 1
    set:
      scaleCertsList:
        - name: certname
          id: 1
        - name: certname2
          id: 2
      # Simulating middleware injection
      ixCertificates:
        "1":
          privatekey: some_key
          certificate: cert_content
        "2":
          privatekey: some_key2
          certificate: cert_content2
    asserts:
      - isKind:
          of: Secret
      - isAPIVersion:
          of: v1
      - equal:
          path: type
          value: kubernetes.io/tls
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-certname2-ixcert-2-0
      - isNotEmpty:
          path: data.tls\.crt
      - isNotEmpty:
          path: data.tls\.key
